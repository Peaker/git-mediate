-- Initial git-mediate.cabal generated by cabal init.  For
-- further documentation, see https://cabal.readthedocs.io/

name:                git-mediate
version:             1.0.9
synopsis:            Tool to help resolving git conflicts
description:         Git conflict resolution has never been easier
                     .
                     When encountering a conflict, you can sometimes
                     imagine: if only I could have applied one of
                     these patches BEFORE the other rather than
                     concurrently, I wouldn't be in this mess!
                     .
                     Well, with git-mediate, you can!
                     .

                     In any conflicted state - git-mediate shows you
                     the 2 diffs involved. By applying these diffs to
                     the base version and the other version, you
                     emulate the situation where the patch had already
                     existed when the other had been applied.
                     .
                     Reapply git-mediate, it will validate that you've
                     indeed applied it correctly, and bam: conflict
                     disappeared!
                     .
                     Git-mediate also lets you handle modify/delete
                     conflicts (there's no sane way in git to show
                     what the modification actually was)
                     .
                     Git-mediate also streamlines jumping to the
                     conflicts with your editor, either with the `-e`
                     option to invoke your editor, or via the standard
                     line number format, which is parsed by all major
                     editors, to allow use of "jump to next error"
                     keys.
                     .
                     Git-mediate especially shines with automatic
                     source transformation tools such as renamers.
                     .
                     In a conflicted state, re-apply a rename that
                     caused the conflict, run git-mediate without
                     opening any files, and the conflicts are gone!

homepage:            https://github.com/Peaker/git-mediate
license:             GPL-2
license-file:        LICENSE
author:              Eyal Lotem
maintainer:          eyal.lotem@gmail.com
-- copyright:
category:            Development
build-type:          Simple
extra-source-files:  stack.yaml
                     ChangeLog.md
                     README.md
cabal-version:       >=1.10

source-repository head
  type: git
  location: https://github.com/Peaker/git-mediate

executable git-mediate
  main-is:             Main.hs
  other-modules:       Conflict
                     , Environment
                     , Opts
                     , PPDiff
                     , Resolution
                     , SideDiff
                     , StrUtils
                     , Version
                     , Paths_git_mediate
  ghc-options:         -O2 -Wall
  -- other-extensions:
  build-depends:       base >=4.8 && <5
                     , base-compat >= 0.8.2
                     , mtl >=2.1
                     , directory >=1.2
                     , process >=1.2
                     , filepath >=1.3
                     , unix-compat >=0.4.2.0
                     , Diff >=0.4
                     , ansi-terminal >=0.6.2
                     , optparse-applicative >=0.11
                     , generic-data >=0.8.2
  hs-source-dirs:      src
  default-language:    Haskell2010
